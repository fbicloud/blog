[{"categories":["奇技淫巧"],"content":" 需要的工具 Git Miniconda3 ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:1:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#需要的工具"},{"categories":["奇技淫巧"],"content":" 克隆stable-diffusion-webui git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git --depth=1 ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:2:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#克隆stable-diffusion-webui"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#miniconda3配置"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#创建虚拟环境"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#激活虚拟环境"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#更换pip源为国内"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#运行stable-diffusion-webui"},{"categories":["奇技淫巧"],"content":" Miniconda3配置生成.condarc文件 conda config --set show_channel_urls yes 编辑.condarc加入以下配置 channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。 创建虚拟环境 conda create -n stable-diffusion-webui python=3.10.6 激活虚拟环境 conda activate stable-diffusion-webui 更换pip源为国内 python -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 运行stable-diffusion-webui .\\webui-user.bat 启动参数 # webui-user.bat # 修改局域网允许访问 安装插件 COMMANDLINE_ARGS=--listen --xformers --enable-insecure-extension-access ","date":"2023-04-29","objectID":"/stable-diffusion-webui/:3:0","series":null,"tags":["ai绘画","stable-diffusion-webui"],"title":"Stable Diffusion Webui部署","uri":"/stable-diffusion-webui/#启动参数"},{"categories":["奇技淫巧"],"content":" 使用国内apt源 cat \u003e /etc/apt/sources.list \u003c\u003c EOF deb https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free deb-src https://mirrors.ustc.edu.cn/debian/ bullseye main contrib non-free deb https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-updates main contrib non-free deb https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free deb-src https://mirrors.ustc.edu.cn/debian/ bullseye-backports main contrib non-free deb https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free deb-src https://mirrors.ustc.edu.cn/debian-security/ bullseye-security main contrib non-free EOF apt update -y \u0026\u0026 apt upgrade -y ​ ","date":"2022-10-01","objectID":"/debian11-install/:1:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#使用国内apt源"},{"categories":["奇技淫巧"],"content":" 配置sudo apt install sudo -y cat \u003e /etc/sudoers.d/username \u003c\u003c EOF username ALL=(ALL) NOPASSWD:ALL EOF ​ ","date":"2022-10-01","objectID":"/debian11-install/:2:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#配置sudo"},{"categories":["奇技淫巧"],"content":" 配置网络 sudo vim /etc/network/interfaces # 重启 sudo systemctl restart networking ​ ","date":"2022-10-01","objectID":"/debian11-install/:3:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#配置网络"},{"categories":["奇技淫巧"],"content":" 设置时区 # 查看时区，有 CST 正确 date # 设置 sudo timedatectl set-timezone Asia/Shanghai # 或者使用向导选择 tzselect ​ ","date":"2022-10-01","objectID":"/debian11-install/:4:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#设置时区"},{"categories":["奇技淫巧"],"content":" shell自定义 命令自动补全忽略大小写 echo 'set completion-ignore-case on' \u003e\u003e ~/.inputrc 修改 vmrc（vim 配置文件） 为当前用户创建 ~/.vimrc，内容参看上述 “配置 vi” 为将 .vimrc 添加到默认用户配置文件 cp ~/.vimrc /etc/skel/.vimrc ll 常规版 一般 Linux 中默认定义了 ll 别名，但参数比较少，需要使用更加强大的 ll 别名。 Debian 默认并没有定义 ll 别名。 写入环境变量（当前用户优先执行）： bash： echo 'alias ll=\"ls -lahF --color=auto --time-style=long-iso\"' \u003e\u003e ~/.bashrc 高级版 ls：以数字显示权限 这里我们把命令叫做 lll 命令： ls -lahF --color=auto --time-style=long-iso | awk '{k=0;s=0;for(i=0;i\u003c=8;i++){k+=((substr($1,i+2,1)~/[rwxst]/)*2^(8-i))}j=4;for(i=4;i\u003c=10;i+=3){s+=((substr($1,i,1)~/[stST]/)*j);j/=2}if(k){printf(\"%0o%0o \",s,k)}print}' 创建文件 在使用 cat EOF 中出现 $ 变量通常会直接被执行，显示执行的结果。若想保持 $ 变量不变需要使用 \\ 符进行注释。 # 如果非 root 用户，切换到 root sudo -i cat \u003e /usr/local/bin/lll \u003c\u003cEOF #!/bin/bash ls -lahF --color=auto --time-style=long-iso | awk '{k=0;s=0;for(i=0;i\u003c=8;i++){k+=((substr(\\$1,i+2,1)~/[rwxst]/)*2^(8-i))}j=4;for(i=4;i\u003c=10;i+=3){s+=((substr(\\$1,i,1)~/[stST]/)*j);j/=2}if(k){printf(\"%0o%0o \",s,k)}print}' EOF # 赋予执行权限： chmod +x /usr/local/bin/lll # 如果非 root 用户，执行完毕退出 exit 写入环境变量（可选配置，默认不需要）： bash echo 'alias lll=\"/usr/local/bin/lll\"' \u003e\u003e ~/.bashrc ​ ","date":"2022-10-01","objectID":"/debian11-install/:5:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#shell自定义"},{"categories":["奇技淫巧"],"content":" 防火墙 sudo apt install -y nftables sudo systemctl enable nftables.service #清空当前规则集： nft flush ruleset #查询当前规则集： nft list ruleset #添加一个表： nft add table inet filter #添加input、forward和output三个基本链。input和forward的默认策略是drop。output的默认策略是accept。 nft add chain inet filter input { type filter hook input priority 0 \\; policy drop \\; } nft add chain inet filter forward { type filter hook forward priority 0 \\; policy drop \\; } nft add chain inet filter output { type filter hook output priority 0 \\; policy accept \\; } #添加两个与TCP和UDP关联的常规链： nft add chain inet filter TCP nft add chain inet filter UDP #related和established的流量会accept： nft add rule inet filter input ct state related,established accept #loopback接口的流量会accept： nft add rule inet filter input iif lo accept #无效的流量会drop： nft add rule inet filter input ct state invalid drop #新的echo请求（ping）会accept： nft add rule inet filter input ip protocol icmp icmp type echo-request ct state new accept #新的UDP流量跳转到UDP链： nft add rule inet filter input ip protocol udp ct state new jump UDP #新的TCP流量跳转到TCP链： nft add rule inet filter input ip protocol tcp tcp flags \\\u0026 \\(fin\\|syn\\|rst\\|ack\\) == syn ct state new jump TCP #未由其他规则处理的所有通信会reject： nft add rule inet filter input ip protocol udp reject nft add rule inet filter input ip protocol tcp reject with tcp reset nft add rule inet filter input counter reject with icmp type prot-unreachable #web服务器的连接端口80: nft add rule inet filter TCP tcp dport 80 accept #打开web服务器HTTPS连接端口443： nft add rule inet filter TCP tcp dport 443 accept #允许SSH连接端口22: nft add rule inet filter TCP tcp dport 22 accept #NAT #删除规则表 dnat1 #nft delete table ip dnat1 #增加规则表 dnat1 nft add table ip dnat1 #在表dnat1中增加一条链 prerouting [SNAT] nft add chain dnat1 prerouting { type nat hook prerouting priority 0 \\;} #在表dnat1中增加一条链 postrouting [DNAT] nft add chain dnat1 postrouting { type nat hook postrouting priority 100 \\; } # nft add rule dnat1 prerouting ip daddr 192.168.1.1 tcp dport 80 counter dnat 172.16.1.2:80 nft add fule dnat1 postrouting ip daddr 172.16.1.2 tcp dport 80 counter snat to 172.16.1.1 # nft add rule dnat1 prerouting ip saddr 172.16.1.2 tcp sport 80 counter dnat 192.168.1.2 nft add rule dnat1 postrouting ip saddr 172.16.1.2 tcp sport 80 counter snat to 192.168.1.1 ","date":"2022-10-01","objectID":"/debian11-install/:6:0","series":null,"tags":["debian","笔记"],"title":"Debian11安装笔记","uri":"/debian11-install/#防火墙"},{"categories":["奇技淫巧"],"content":"修行之道，本就是截取一线生机，逆天而行。","date":"2022-09-24","objectID":"/esxi-install/","series":null,"tags":["esxi","笔记"],"title":"Esxi安装笔记","uri":"/esxi-install/"},{"categories":["奇技淫巧"],"content":" 用到的工具ESXi-Customizer-PS ESXi安装镜像 社区网卡驱动 修改网卡排列顺序 ","date":"2022-09-24","objectID":"/esxi-install/:1:0","series":null,"tags":["esxi","笔记"],"title":"Esxi安装笔记","uri":"/esxi-install/#用到的工具"},{"categories":["奇技淫巧"],"content":" 封装驱动 .\\ESXi-Customizer-PS.ps1 -izip .\\VMware-ESXi-7.0U3f-20036589-depot.zip -pkgDir .\\drive\\ ","date":"2022-09-24","objectID":"/esxi-install/:2:0","series":null,"tags":["esxi","笔记"],"title":"Esxi安装笔记","uri":"/esxi-install/#封装驱动"},{"categories":["奇技淫巧"],"content":"天心即我心，我意即天意。","date":"2022-09-23","objectID":"/openwrt-build/","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/"},{"categories":["奇技淫巧"],"content":" 依赖安装 sudo apt update -y \u0026\u0026 sudo apt upgrade -y sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \\ bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \\ git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \\ libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \\ mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \\ rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev ​ ","date":"2022-09-23","objectID":"/openwrt-build/:1:0","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/#依赖安装"},{"categories":["奇技淫巧"],"content":" 自定义","date":"2022-09-23","objectID":"/openwrt-build/:2:0","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/#自定义"},{"categories":["奇技淫巧"],"content":" 修改第一次启动初始化配置 touch package/base-files/files/etc/uci-defaults/99_custom vim package/base-files/files/etc/uci-defaults/99_custom ","date":"2022-09-23","objectID":"/openwrt-build/:2:1","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/#修改第一次启动初始化配置"},{"categories":["奇技淫巧"],"content":" 保留配置文件升级编译 ./scripts/diffconfig.sh \u003e x86.config git pull ./scripts/feeds update -a ./scripts/feeds install -a rm -rf ./tmp \u0026\u0026 rm -rf .config cat x86.config \u003e .config #make menuconfig make defconfig make V=s -j$(nproc) ","date":"2022-09-23","objectID":"/openwrt-build/:2:2","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/#保留配置文件升级编译"},{"categories":["奇技淫巧"],"content":" 旁路由 kmod-br-netfilter ","date":"2022-09-23","objectID":"/openwrt-build/:2:3","series":null,"tags":["openwrt","编译"],"title":"Openwrt编译笔记","uri":"/openwrt-build/#旁路由"},{"categories":["奇技淫巧"],"content":"山山而川，世间而而。不过是见天地，见众生，见自己。","date":"2021-11-20","objectID":"/git-gpg/","series":null,"tags":["git","gpg"],"title":"win git使用gpg","uri":"/git-gpg/"},{"categories":["奇技淫巧"],"content":" #设置key id git config --global user.signingkey \"your key id\" #启用commit gpg加密 git config --global commit.gpgsign true #修改默认gpg路径 git config --global gpg.program \"c:/Program Files (x86)/GNU/GnuPG/gpg2.exe\" ","date":"2021-11-20","objectID":"/git-gpg/:0:0","series":null,"tags":["git","gpg"],"title":"win git使用gpg","uri":"/git-gpg/#"},{"categories":["奇技淫巧"],"content":"书山有路勤为径，学海无涯苦作舟。","date":"2021-09-15","objectID":"/vs-tools/","series":null,"tags":["win","ide","tools"],"title":"vs studio常用扩展","uri":"/vs-tools/"},{"categories":["奇技淫巧"],"content":"微软很可能在2021年推出 Visual Studio 2021版。但是好在Visual Studio系列开发工具的延续性较好，我们熟悉旧版本就很容易上手新版本，甚至不会感觉到有不便。 ​ 如果你也使用Visual Studio学习C++，那么这里给你推荐一些扩展，能帮助我们学习C++ ​ 一、首先要安装微软自己开发的扩展：Productivity Power Tools 2017/2019。这是一个扩展套装，其中包含12个扩展(截至2019年6月）。只要安装这一个扩展套装，也就安装了其中包含的12个扩展。这12个扩展是： Align Assignments Copy As Html Double-Click Maximize Fix Mixed Tabs Match Margin Middle Click Scroll Peek Help Power Commands for Visual Studio Quick Launch Tasks Solution Error Visualizer Shrink Empty Lines Time Stamp Margin ​ 二、安装CodeMaid CodeMaid能够帮助我们在保存代码的时候，清理代码中无用的空格和空行 ​ 三、Open In Explorer 该扩展在解决方案管理器中添加了一些类似文件资源管理器的功能。只要在解决方案管理器中单击鼠标右键，在弹出菜单中就能看到“在资源管理器中打开文件夹”、“拷贝文件”等功能 ​ 四、Trailing Whitespace Visualizer 该扩展能够显示行尾无用的空格。当然，如果安装了CodeMaid扩展的话，在保存代码时，CodeMaid会自动将行尾五用空格删除 ​ 五、Viasfora 该扩展可以使程序中的成对匹配的大中小括号以不同的颜色显示，便于我们将括号的左右半边匹配 ​ 六、Visual Studio IntelliCode 基于机器学习的代码编写辅助工具。目前功能还比较弱。感兴趣可以尝尝鲜 ​ 七、PowerMode 敲键盘写代码的时候，字符会出现烟花效果。本课程中相当一部分示例都有该效果。 ​ 八、Snippetica 代码片段工具。按下特定的字符或者字符组合，然后按TAB键，Snippetica就会将该扩展中存储的一些代码片段直接粘贴到你的编辑器中。 该工具能比较有效地提升编码的速度。你可以尝试输入 forr 然后按tab键，它会自动将基于范围的for循环的框架代码贴到你的编辑器中。 九、VSColorOutput 该扩展与Output enhancer扩展的功能类似，但是比Output enhancer好用，所以如果同时安装了Output enhancer扩展的话，将其禁用即可 ​ 十、Smooth Scroll 让代码编辑器窗口的滚动更平滑。 ​ 十一、Word Highlight With Margin 当你用鼠标选中某个单词/标识符后，该扩展可以将所有的单词/标识符同时加亮显示。 这是一个非常有用的扩展 ","date":"2021-09-15","objectID":"/vs-tools/:0:0","series":null,"tags":["win","ide","tools"],"title":"vs studio常用扩展","uri":"/vs-tools/#"},{"categories":["奇技淫巧"],"content":"国破山河在，城春草木生。","date":"2021-09-10","objectID":"/win10-file-owner/","series":null,"tags":["win"],"title":"win10批量修改文件所有者","uri":"/win10-file-owner/"},{"categories":["奇技淫巧"],"content":"修改当前目录下所有文件所有者为当前用户 takeown /f * /r /d y ","date":"2021-09-10","objectID":"/win10-file-owner/:0:0","series":null,"tags":["win"],"title":"win10批量修改文件所有者","uri":"/win10-file-owner/#"},{"categories":["奇技淫巧"],"content":"大道五十，天衍四九，人遁其一。","date":"2021-09-02","objectID":"/win-app/","series":null,"tags":["windows","app"],"title":"Windows常用软件","uri":"/win-app/"},{"categories":["奇技淫巧"],"content":"FiraCode Wox-launcher QuickLook PowerToys 7-Zip-zstd Ventoy honeyview ","date":"2021-09-02","objectID":"/win-app/:0:0","series":null,"tags":["windows","app"],"title":"Windows常用软件","uri":"/win-app/#"},{"categories":["奇技淫巧"],"content":"路随远，行则至。","date":"2021-09-01","objectID":"/esp-idf-install/","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/"},{"categories":["奇技淫巧"],"content":" 依赖安装 sudo apt update -y sudo apt-get install git wget make libncurses-dev flex bison gperf python python-is-python2 python3-pip cmake -y 提示 觉得慢的可以把源换成中科大或者阿里云的 ​ ","date":"2021-09-01","objectID":"/esp-idf-install/:1:0","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/#依赖安装"},{"categories":["奇技淫巧"],"content":" 设置pip源为阿里云 mkdir ~/.pip cat \u003e ~/.pip/pip.conf \u003c\u003c EOF [global] index-url = http://mirrors.aliyun.com/pypi/simple/ [install] trusted-host=mirrors.aliyun.com disable-pip-version-check = true timeout = 60 EOF ​ ","date":"2021-09-01","objectID":"/esp-idf-install/:2:0","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/#设置pip源为阿里云"},{"categories":["奇技淫巧"],"content":" 使用Github国内镜像 # 使用镜像 git config --global url.\"https://hub.fastgit.org/\".insteadof https://github.com/ # 取消镜像 git config --global --unset url.https://hub.fastgit.org/.insteadof ​ ","date":"2021-09-01","objectID":"/esp-idf-install/:3:0","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/#使用github国内镜像"},{"categories":["奇技淫巧"],"content":" 获取esp-idf mkdir ~/esp cd ~/esp git clone --recursive https://github.com/espressif/esp-idf.git cd ~/esp/esp-idf # 设置python3为默认 sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100 sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150 # 国内使用使用乐鑫的下载服务器 export IDF_GITHUB_ASSETS=dl.espressif.com/github_assets ./install.sh ~/.espressif/python_env/idf4.4_py3.8_env/bin/python -m pip install --upgrade pip ​ ","date":"2021-09-01","objectID":"/esp-idf-install/:4:0","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/#获取esp-idf"},{"categories":["奇技淫巧"],"content":" 设置环境变量 # 临时环境变量 . ~/esp/esp-idf/export.sh # 持久化环境变量 echo \". ~/esp/esp-idf/export.sh\" \u003e\u003e /etc/profile.d/esp-idf.sh ​ ","date":"2021-09-01","objectID":"/esp-idf-install/:5:0","series":null,"tags":["esp-idf","linux"],"title":"国内Linux下配置esp-idf开发环境","uri":"/esp-idf-install/#设置环境变量"},{"categories":["奇技淫巧"],"content":"不敢仗剑登城头，唯恐逐退三轮月。","date":"2021-08-31","objectID":"/seo-github-pages/","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/"},{"categories":["奇技淫巧"],"content":"由于某种不可抗拒力 导致Github pages无法被百度收录 遂有了这篇文章 ","date":"2021-08-31","objectID":"/seo-github-pages/:0:0","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#"},{"categories":["奇技淫巧"],"content":" 解决思路 graph LR; A[访问] --\u003e B{Dns判断} B --\u003e C[用户] C --\u003e D[Github pages] B --\u003e E[蜘蛛] E --\u003e F[腾讯对象存储] ​ ","date":"2021-08-31","objectID":"/seo-github-pages/:1:0","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#解决思路"},{"categories":["奇技淫巧"],"content":" Dnspod设置","date":"2021-08-31","objectID":"/seo-github-pages/:2:0","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#dnspod设置"},{"categories":["奇技淫巧"],"content":" Github pages解析设置 ​ ","date":"2021-08-31","objectID":"/seo-github-pages/:2:1","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#github-pages解析设置"},{"categories":["奇技淫巧"],"content":" 对象存储解析设置 This is a tip 解析地址为对象存储的地址 ​ ","date":"2021-08-31","objectID":"/seo-github-pages/:2:2","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#对象存储解析设置"},{"categories":["奇技淫巧"],"content":" 使用Github Actions实现自动推送到腾讯对象存储 Github Actions主页 COSCMD 工具指南 ","date":"2021-08-31","objectID":"/seo-github-pages/:3:0","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#使用github-actions实现自动推送到腾讯对象存储"},{"categories":["奇技淫巧"],"content":" Actions配置 name: updates # Controls when the workflow will run on: # Triggers the workflow on push or pull request events but only for the main branch push: branches: [ main ] pull_request: branches: [ main ] # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # A workflow run is made up of one or more jobs that can run sequentially or in parallel jobs: # This workflow contains a single job called \"build\" build: # The type of runner that the job will run on runs-on: ubuntu-latest # Steps represent a sequence of tasks that will be executed as part of the job steps: # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it - uses: actions/checkout@v2 - name: Run apt run: | sudo apt update -y sudo apt-get install python -y - name: Install comcmd run: | pip install coscmd - name: Updates run: | coscmd config -a ${{ secrets.COS_ID }} -s ${{ secrets.COS_KEY }} -b ${{ secrets.COS_BUCKET_NAME }} -r ${{ secrets.COS_BUCKET_LOCATION }} -m 16 -p 10 coscmd delete -r -f / coscmd upload -rs ${GITHUB_WORKSPACE}/ / ","date":"2021-08-31","objectID":"/seo-github-pages/:3:1","series":null,"tags":["git","seo","pages"],"title":"解决Github pages百度收录问题","uri":"/seo-github-pages/#actions配置"},{"categories":["久病成医"],"content":"朝闻道，夕死矣。","date":"2021-08-29","objectID":"/%E7%97%98%E7%97%98/","series":null,"tags":["痘痘"],"title":"痘痘","uri":"/%E7%97%98%E7%97%98/"},{"categories":["久病成医"],"content":" 警告 本文仅供参考 请在医师指导下用药 ","date":"2021-08-29","objectID":"/%E7%97%98%E7%97%98/:0:0","series":null,"tags":["痘痘"],"title":"痘痘","uri":"/%E7%97%98%E7%97%98/#"},{"categories":["久病成医"],"content":" step 1先碘伏涂抹患处，然后抗生素软膏涂抹。（例如莫匹罗星软膏） ​ ","date":"2021-08-29","objectID":"/%E7%97%98%E7%97%98/:1:0","series":null,"tags":["痘痘"],"title":"痘痘","uri":"/%E7%97%98%E7%97%98/#step-1"},{"categories":["久病成医"],"content":" step 2勤换洗床上用品，消毒。 ","date":"2021-08-29","objectID":"/%E7%97%98%E7%97%98/:2:0","series":null,"tags":["痘痘"],"title":"痘痘","uri":"/%E7%97%98%E7%97%98/#step-2"},{"categories":["久病成医"],"content":"道求因果，不可强求，但却是人定胜天。","date":"2021-08-29","objectID":"/%E5%92%B3%E5%97%BD/","series":null,"tags":["咳嗽"],"title":"咳嗽","uri":"/%E5%92%B3%E5%97%BD/"},{"categories":["久病成医"],"content":" 警告 本文仅供参考 请在医师指导下用药 头孢 消炎止咳片 ","date":"2021-08-29","objectID":"/%E5%92%B3%E5%97%BD/:0:0","series":null,"tags":["咳嗽"],"title":"咳嗽","uri":"/%E5%92%B3%E5%97%BD/#"},{"categories":["久病成医"],"content":"双手合十成为自己的神，双手张开比肩神明。","date":"2021-08-29","objectID":"/%E4%B8%AD%E8%80%B3%E7%82%8E/","series":null,"tags":["中耳炎"],"title":"中耳炎","uri":"/%E4%B8%AD%E8%80%B3%E7%82%8E/"},{"categories":["久病成医"],"content":" 警告 本文仅供参考 请在医师指导下用药 医用低浓度双氧水擦拭外耳道，抗生素涂抹。 ","date":"2021-08-29","objectID":"/%E4%B8%AD%E8%80%B3%E7%82%8E/:0:0","series":null,"tags":["中耳炎"],"title":"中耳炎","uri":"/%E4%B8%AD%E8%80%B3%E7%82%8E/#"},{"categories":["奇技淫巧"],"content":"重剑无锋，大巧不工。","date":"2021-08-29","objectID":"/windows-defender/","series":null,"tags":["windows"],"title":"禁用Windows Defender","uri":"/windows-defender/"},{"categories":["奇技淫巧"],"content":"使用 Windows 安全中心保护您的数据和设备安全 ","date":"2021-08-29","objectID":"/windows-defender/:0:0","series":null,"tags":["windows"],"title":"禁用Windows Defender","uri":"/windows-defender/#"},{"categories":["奇技淫巧"],"content":" 禁用 reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" /v \"DisableAntiSpyware\" /d 1 /t REG_DWORD /f ​ ","date":"2021-08-29","objectID":"/windows-defender/:1:0","series":null,"tags":["windows"],"title":"禁用Windows Defender","uri":"/windows-defender/#禁用"},{"categories":["奇技淫巧"],"content":" 启用 reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" /v \"DisableAntiSpyware\" /d 0 /t REG_DWORD /f ","date":"2021-08-29","objectID":"/windows-defender/:2:0","series":null,"tags":["windows"],"title":"禁用Windows Defender","uri":"/windows-defender/#启用"},{"categories":["奇技淫巧"],"content":"吾赠汝南柯一梦，汝还吾观道得道。","date":"2021-08-29","objectID":"/gpg-help/","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/"},{"categories":["奇技淫巧"],"content":" 前言GNU Privacy Guard（GnuPG或GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG是自由软件，遵循IETF订定的OpenPGP技术标准设计，并与PGP保持兼容。 GnuPG主页 ","date":"2021-08-29","objectID":"/gpg-help/:1:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#前言"},{"categories":["奇技淫巧"],"content":" 安装 sudo apt install gpg -y ​ ","date":"2021-08-29","objectID":"/gpg-help/:2:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#安装"},{"categories":["奇技淫巧"],"content":" 生成密钥对 ubuntu@ubuntu:~$ gpg --full-gen-key gpg (GnuPG) 2.2.19; Copyright (C) 2019 Free Software Foundation, Inc. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. 请选择您要使用的密钥类型： (1) RSA 和 RSA （默认） (2) DSA 和 Elgamal (3) DSA（仅用于签名） (4) RSA（仅用于签名） (14) Existing key from card 您的选择是？ 4 # 这里选择4 RSA 密钥的长度应在 1024 位与 4096 位之间。 您想要使用的密钥长度？(3072) 4096 请求的密钥长度是 4096 位 # 密钥长度拉满 请设定这个密钥的有效期限。 0 = 密钥永不过期 \u003cn\u003e = 密钥在 n 天后过期 \u003cn\u003ew = 密钥在 n 周后过期 \u003cn\u003em = 密钥在 n 月后过期 \u003cn\u003ey = 密钥在 n 年后过期 密钥的有效期限是？(0) 0 # 这里坑定选择永不过期 密钥永远不会过期 这些内容正确吗？ (y/N) y # 别问 问就是没问题 GnuPG 需要构建用户标识以辨认您的密钥。 真实姓名： test1 电子邮件地址： a@admin.com 注释： test1 您选定了此用户标识： “test1 (test1) \u003ca@admin.com\u003e” 更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ o 我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘 、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数 发生器有更好的机会获得足够的熵。 gpg: 密钥 7C4A96E3BBC9744C 被标记为绝对信任 gpg: 吊销证书已被存储为‘/home/ubuntu/.gnupg/openpgp-revocs.d/454039FDD30010C960EB66287C4A96E3BBC9744C.rev’ 公钥和私钥已经生成并被签名。 请注意这个密钥不能用于加密。您可能想要使用“--edit-key”命令来 生成一个用于此用途的子密钥。 pub rsa4096 2021-08-29 [SC] 454039FDD30010C960EB66287C4A96E3BBC9744C uid test1 (test1) \u003ca@admin.com\u003e 注意 通过上面的操作，生成了一个名为test1，使用RSA加密 且永不过期的账户 454039FDD30010C960EB66287C4A96E3BBC9744C为密钥id ​ ","date":"2021-08-29","objectID":"/gpg-help/:3:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#生成密钥对"},{"categories":["奇技淫巧"],"content":" 创建子密钥我认为主密钥应仅用于管理子密钥，子密钥用来加密解密签名操作 首先看一下我们刚刚创建的密钥 ubuntu@ubuntu:~$ gpg -K # k为小写时列出公钥 k为大写时列出私钥 /home/ubuntu/.gnupg/pubring.kbx ----------------------------- sec rsa4096 2021-08-29 [SC] 454039FDD30010C960EB66287C4A96E3BBC9744C uid [ 绝对 ] test1 (test1) \u003ca@admin.com\u003e 注意 Option Description uid 拥有者信息，姓名和邮箱 pub public key 公钥 sub public subkey 子公钥 sec secret key 私钥 ssb secret subkey 子私钥 S sign 表示可以用来签名 C Certify 表示可以用于认证其他密钥 E Encrypt 表示可以用来加密 A Authentication 表示可以用来认证 ​ ","date":"2021-08-29","objectID":"/gpg-help/:4:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#创建子密钥"},{"categories":["奇技淫巧"],"content":" 创建两个子密钥 一个用来加密 一个用来签名 ubuntu@ubuntu:~$ gpg --edit-key test1 gpg (GnuPG) 2.2.19; Copyright (C) 2019 Free Software Foundation, Inc. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. 私钥可用。 sec rsa4096/7C4A96E3BBC9744C 创建于：2021-08-29 有效至：永不 可用于：SC 信任度：绝对 有效性：绝对 [ 绝对 ] (1). test1 (test1) \u003ca@admin.com\u003e gpg\u003e addkey # addkey是创建子密钥的意思 请选择您要使用的密钥类型： (3) DSA（仅用于签名） (4) RSA（仅用于签名） (5) ElGamal（仅用于加密） (6) RSA（仅用于加密） (14) Existing key from card 您的选择是？ 4 # 选择4 仅用于签名 RSA 密钥的长度应在 1024 位与 4096 位之间。 您想要使用的密钥长度？(3072) 4096 请求的密钥长度是 4096 位 请设定这个密钥的有效期限。 0 = 密钥永不过期 \u003cn\u003e = 密钥在 n 天后过期 \u003cn\u003ew = 密钥在 n 周后过期 \u003cn\u003em = 密钥在 n 月后过期 \u003cn\u003ey = 密钥在 n 年后过期 密钥的有效期限是？(0) 0 密钥永远不会过期 这些内容正确吗？ (y/N) y 真的要创建吗？(y/N) y 我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘 、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数 发生器有更好的机会获得足够的熵。 sec rsa4096/7C4A96E3BBC9744C 创建于：2021-08-29 有效至：永不 可用于：SC 信任度：绝对 有效性：绝对 ssb rsa4096/17B455B1D1CF2DC4 创建于：2021-08-29 有效至：永不 可用于：S [ 绝对 ] (1). test1 (test1) \u003ca@admin.com\u003e gpg\u003e addkey 请选择您要使用的密钥类型： (3) DSA（仅用于签名） (4) RSA（仅用于签名） (5) ElGamal（仅用于加密） (6) RSA（仅用于加密） (14) Existing key from card 您的选择是？ 6 # 选择6 仅用于加密 RSA 密钥的长度应在 1024 位与 4096 位之间。 您想要使用的密钥长度？(3072) 4096 请求的密钥长度是 4096 位 请设定这个密钥的有效期限。 0 = 密钥永不过期 \u003cn\u003e = 密钥在 n 天后过期 \u003cn\u003ew = 密钥在 n 周后过期 \u003cn\u003em = 密钥在 n 月后过期 \u003cn\u003ey = 密钥在 n 年后过期 密钥的有效期限是？(0) 0 密钥永远不会过期 这些内容正确吗？ (y/N) y 真的要创建吗？(y/N) y 我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘 、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数 发生器有更好的机会获得足够的熵。 sec rsa4096/7C4A96E3BBC9744C 创建于：2021-08-29 有效至：永不 可用于：SC 信任度：绝对 有效性：绝对 ssb rsa4096/17B455B1D1CF2DC4 创建于：2021-08-29 有效至：永不 可用于：S ssb rsa4096/77C63F3A7A718DE9 创建于：2021-08-29 有效至：永不 可用于：E [ 绝对 ] (1). test1 (test1) \u003ca@admin.com\u003e gpg\u003e save # 一定要记得保存 ​ ","date":"2021-08-29","objectID":"/gpg-help/:4:1","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#创建两个子密钥-一个用来加密-一个用来签名"},{"categories":["奇技淫巧"],"content":" 导出","date":"2021-08-29","objectID":"/gpg-help/:5:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出"},{"categories":["奇技淫巧"],"content":" 导出公钥 gpg -o pub.key -a --export test1 ​ ","date":"2021-08-29","objectID":"/gpg-help/:5:1","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出公钥"},{"categories":["奇技淫巧"],"content":" 导出私钥 gpg -o sec.key -a --export-secret-keys test1 ​ ","date":"2021-08-29","objectID":"/gpg-help/:5:2","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出私钥"},{"categories":["奇技淫巧"],"content":" 导出全部子私钥 gpg -o ssb.key -a --export-secret-subkeys test1 ​ ","date":"2021-08-29","objectID":"/gpg-help/:5:3","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出全部子私钥"},{"categories":["奇技淫巧"],"content":" 导出单个子私钥 gpg -o ssb.key -a --export-secret-subkey 私钥id! # 感叹号是必要的 ​ ","date":"2021-08-29","objectID":"/gpg-help/:5:4","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出单个子私钥"},{"categories":["奇技淫巧"],"content":" 导出吊销证书 gpg --output revoke.asc --gen-revoke mykey 注意 参数mykey必须是密钥说明符，可以是主密钥对的密钥 ID，也可以是标识密钥对的用户 ID 的任何部分。生成的证书将保留在文件 revoke.asc 中。如果省略--output选项，结果将放在标准输出上。由于证书很短，您可能希望打印证书的硬拷贝以存放在安全的地方，例如您的保险箱。证书不应存储在其他人可以访问的地方，因为任何人都可以发布吊销证书并使相应的公钥无用。 ​ ","date":"2021-08-29","objectID":"/gpg-help/:5:5","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导出吊销证书"},{"categories":["奇技淫巧"],"content":" 导入","date":"2021-08-29","objectID":"/gpg-help/:6:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导入"},{"categories":["奇技淫巧"],"content":" 导入公钥 gpg --import pub.key ​ ","date":"2021-08-29","objectID":"/gpg-help/:6:1","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导入公钥"},{"categories":["奇技淫巧"],"content":" 导入私钥 gpg --import sec.key 注意 gpg -K时密钥后面的#表示主密钥不在本地 ​ ","date":"2021-08-29","objectID":"/gpg-help/:6:2","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#导入私钥"},{"categories":["奇技淫巧"],"content":" 删除","date":"2021-08-29","objectID":"/gpg-help/:7:0","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#删除"},{"categories":["奇技淫巧"],"content":" 删除公钥 gpg --delete-key test1 ​ ","date":"2021-08-29","objectID":"/gpg-help/:7:1","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#删除公钥"},{"categories":["奇技淫巧"],"content":" 删除私钥 gpg --delete-secret-key test1 ​ ","date":"2021-08-29","objectID":"/gpg-help/:7:2","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#删除私钥"},{"categories":["奇技淫巧"],"content":" 删除所有 gpg --delete-keys test1 ","date":"2021-08-29","objectID":"/gpg-help/:7:3","series":null,"tags":["gpg","linux"],"title":"GnuPG学习笔记","uri":"/gpg-help/#删除所有"},{"categories":["奇技淫巧"],"content":"君子坐而论道，少年起而行之。","date":"2021-08-28","objectID":"/wol/","series":null,"tags":["windows","wol"],"title":"windows启用wol唤醒","uri":"/wol/"},{"categories":["奇技淫巧"],"content":" step 1打开网卡管理软件 Intel(R) PROSet Adapter Configuration Utility ​ ","date":"2021-08-28","objectID":"/wol/:1:0","series":null,"tags":["windows","wol"],"title":"windows启用wol唤醒","uri":"/wol/#step-1"},{"categories":["奇技淫巧"],"content":" step 2找到电源关闭状态下魔包唤醒并启用 ​ ","date":"2021-08-28","objectID":"/wol/:2:0","series":null,"tags":["windows","wol"],"title":"windows启用wol唤醒","uri":"/wol/#step-2"},{"categories":["奇技淫巧"],"content":" step 3完结撒花 ","date":"2021-08-28","objectID":"/wol/:3:0","series":null,"tags":["windows","wol"],"title":"windows启用wol唤醒","uri":"/wol/#step-3"},{"categories":["奇技淫巧"],"content":"我心自在，动静皆我。","date":"2021-08-23","objectID":"/zstd/","series":null,"tags":["zstd","压缩"],"title":"使用zstd算法压缩文件","uri":"/zstd/"},{"categories":["奇技淫巧"],"content":"项目主页 ","date":"2021-08-23","objectID":"/zstd/:0:0","series":null,"tags":["zstd","压缩"],"title":"使用zstd算法压缩文件","uri":"/zstd/#"},{"categories":["奇技淫巧"],"content":" linux下安装 git clone https://github.com/facebook/zstd.git zstd cd zstd make install ","date":"2021-08-23","objectID":"/zstd/:1:0","series":null,"tags":["zstd","压缩"],"title":"使用zstd算法压缩文件","uri":"/zstd/#linux下安装"},{"categories":["奇技淫巧"],"content":" 参数 zstd --help 使用方式 : zstd [args] [FILE(s)] [-o file] 参数选项 : -# : 压缩级别(1-19，默认值为3) -d : 解压 -D file: 使用文件作为字典 -o file: 结果存储在文件中 -f : 在没有提示的情况下覆盖输出并(解压)压缩链接 --rm : 成功解压缩后删除源文件 -k : 保存源文件(默认) -h/-H : 显示帮助/长帮助并退出 高级选项 : -V : 显示版本号并退出 -v : 详细模式 -q : 静默输出 -c : 强制写入标准输出 -l : 输出zstd压缩包中的信息 --ultra : 启用超过19级，最多22级(需要更多内存) -T# : 使用几个线程进行压缩(默认值:1个) -r : 递归地操作目录 --format=gzip : 将文件压缩为.gz格式 -M# : 为解压设置内存使用限制 字典生成器 : --train ## : 从一组训练文件中创建一个字典 --train-cover[=k=#,d=#,steps=#] : 使用带有可选参数的cover算法 --train-legacy[=s=#] : 有选择性地使用遗留算法(默认值:9) -o file : “file”是字典名(默认:字典) --maxdict=# : 将字典限制为指定大小(默认值:112640) --dictID=# : 强制字典ID为指定值(默认:随机) 性能测试参数 : -b# : 基准测试文件，使用#压缩级别(默认为1) -e# : 测试从-bX到#的所有压缩级别(默认值:1) -i# : 最小计算时间(秒)(默认为3s) -B# : 将文件切成大小为#个独立块(默认:无块) --priority=rt : 将进程优先级设置为实时 ","date":"2021-08-23","objectID":"/zstd/:2:0","series":null,"tags":["zstd","压缩"],"title":"使用zstd算法压缩文件","uri":"/zstd/#参数"},{"categories":["奇技淫巧"],"content":"君子藏器于身，待时而动。","date":"2021-08-12","objectID":"/amd-master/","series":null,"tags":["amd"],"title":"解决Ryzen Master Driver没有正确安装","uri":"/amd-master/"},{"categories":["奇技淫巧"],"content":" 解决方法 win+r输入regedit.msc 进入以下路径HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services 直接删除AMDRyzenMasterDriverVxx 重启电脑即可正常使用 ","date":"2021-08-12","objectID":"/amd-master/:1:0","series":null,"tags":["amd"],"title":"解决Ryzen Master Driver没有正确安装","uri":"/amd-master/#解决方法"},{"categories":["奇技淫巧"],"content":"人能弘道，非道弘人。","date":"2021-08-12","objectID":"/rdp-gpu/","series":null,"tags":["远程桌面","windows"],"title":"微软远程桌面开启显卡加速","uri":"/rdp-gpu/"},{"categories":["奇技淫巧"],"content":" 显卡加速 win+r打开运行 输入gpedit.msc 依次找到计算机配置-\u003e管理模板-\u003eWindows组件-\u003e远程桌面服务-\u003e远程桌面会话主机-\u003e远程会话环境 在右边选择将硬件图形适配器应用于所有远程桌面服务会话 右键编辑，选择已启用确定保存。 重启远程主机。 现在可以在远程桌面里运行需要GPU支持的应用了 ","date":"2021-08-12","objectID":"/rdp-gpu/:1:0","series":null,"tags":["远程桌面","windows"],"title":"微软远程桌面开启显卡加速","uri":"/rdp-gpu/#显卡加速"},{"categories":["奇技淫巧"],"content":" 提升传输帧率 RDP默认的帧率是30，可以设置为60帧传输 实际效果取决于客户端设置、网络环境等等因素 打开远程主机上的注册表编辑器 win+r输入regedit 找到HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations 在空白处右键-\u003e新建-\u003eDWORD（32位）值，命名为DWMFRAMEINTERVAL 双击刚添加的这一项，基数选择为十进制，数值数据填写15 确定保存，重启生效 ","date":"2021-08-12","objectID":"/rdp-gpu/:2:0","series":null,"tags":["远程桌面","windows"],"title":"微软远程桌面开启显卡加速","uri":"/rdp-gpu/#提升传输帧率"},{"categories":["奇技淫巧"],"content":" Nvidia优化 运行nvidiaopenglrdp.exe ","date":"2021-08-12","objectID":"/rdp-gpu/:3:0","series":null,"tags":["远程桌面","windows"],"title":"微软远程桌面开启显卡加速","uri":"/rdp-gpu/#nvidia优化"},{"categories":["奇技淫巧"],"content":"红尘争渡百年土，灵魂腐朽看人间。","date":"2021-08-11","objectID":"/git-crlf-lf/","series":null,"tags":["git","windows"],"title":"解决win10下Git自动转换换行符","uri":"/git-crlf-lf/"},{"categories":["奇技淫巧"],"content":"windows系统的换行方式CRLF: \"\\r\\n\" Linux系统的换行方式LF: \"\\n\" 在你使用git的时候，git会自动将代码当中与你当前系统不同的换行方式转化成你当前系统的换行方式，从而造成冲突。 ","date":"2021-08-11","objectID":"/git-crlf-lf/:0:0","series":null,"tags":["git","windows"],"title":"解决win10下Git自动转换换行符","uri":"/git-crlf-lf/#"},{"categories":["奇技淫巧"],"content":" 解决方法 git config --global core.autocrlf false ","date":"2021-08-11","objectID":"/git-crlf-lf/:1:0","series":null,"tags":["git","windows"],"title":"解决win10下Git自动转换换行符","uri":"/git-crlf-lf/#解决方法"},{"categories":["奇技淫巧"],"content":"我不修道，道自然来。","date":"2021-08-11","objectID":"/crlf-lf/","series":null,"tags":["花里胡哨"],"title":"CRLF CR LF详解","uri":"/crlf-lf/"},{"categories":["奇技淫巧"],"content":" 前言 很长一段时间里，对于CRLF、CR、LF的理解仅限于不同操作系统下对换行符的定义。所谓知其然需知其所以然，从学习中找到乐趣，对知识的记忆才会更加深刻。 CR：Carriage Return，对应ASCII中转义字符\\r，表示回车 LF：Linefeed，对应ASCII中转义字符\\n，表示换行 CRLF：Carriage Return \u0026 Linefeed，\\r\\n，表示回车并换行 ","date":"2021-08-11","objectID":"/crlf-lf/:1:0","series":null,"tags":["花里胡哨"],"title":"CRLF CR LF详解","uri":"/crlf-lf/#前言"},{"categories":["奇技淫巧"],"content":" 野史 据野史记载，在很久以前的机械打字机时代，CR和LF分别具有不同的作用：LF会将打印纸张上移一行位置，但是保持当前打字的水平位置不变；CR则会将“Carriage”（打字机上的滚动托架）滚回到打印纸张的最左侧，但是保持当前打字的垂直位置不变，即还是在同一行。 当CR和LF组合使用时，则会将打印纸张上移一行，且下一个打字位置将回到该行的最左侧，也就是我们今天所理解的换行操作。 随着时间的推移，机械打字机渐渐地退出了历史舞台，当初的纸张变成了今天的显示器，打字机的按键也演变为了如今的键盘。在操作系统出现的年代，受限于内存和软盘空间的不足，一些操作系统的设计者决定采用单个字符来表示换行符，如Unix的LF、MacIntosh的CR。他们的意图都是为了进行换行操作，只是当初并没有一个国际标准（或者其他原因，鬼知道），所以才有这样字符上的不同。 ","date":"2021-08-11","objectID":"/crlf-lf/:2:0","series":null,"tags":["花里胡哨"],"title":"CRLF CR LF详解","uri":"/crlf-lf/#野史"},{"categories":["奇技淫巧"],"content":" 结论 许多现代的文本编辑器和命令行工具都提供了可选择的换行符配置，方便用户按照自己的意愿来改变换行符的表现形式，所以我们只需要知道CRLF、CR、LF的作用即可。 ","date":"2021-08-11","objectID":"/crlf-lf/:3:0","series":null,"tags":["花里胡哨"],"title":"CRLF CR LF详解","uri":"/crlf-lf/#结论"},{"categories":["奇技淫巧"],"content":"人行之处，是为道。修道修道，吾之所为，皆为道。","date":"2021-08-10","objectID":"/oneplus5-kernel-build/","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/"},{"categories":["奇技淫巧"],"content":" 警告 本次构建基于ubuntu 18.04 编译器Arm gcc 10.3 此源码暂未支持Clang ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:0:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#"},{"categories":["奇技淫巧"],"content":" 依赖安装 sudo apt update -y sudo apt install -y gcc g++ python make texinfo texlive bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev unzip language-pack-zh-hans ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:1:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#依赖安装"},{"categories":["奇技淫巧"],"content":" 编译器下载 cd ~/ export GCC=\"gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu\" wget \"https://developer.arm.com/-/media/Files/downloads/gnu-a/10.3-2021.07/binrel/${GCC}.tar.xz\" xz -d ${GCC}.tar.xz tar xvf ${GCC}.tar rm -rf ${GCC}.tar ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:2:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#编译器下载"},{"categories":["奇技淫巧"],"content":" 设置工具链环境变量 export ARCH=\"arm64\" export PATH=\"~/${GCC}/bin:$PATH\" export CROSS_COMPILE=\"aarch64-none-linux-gnu-\" ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:3:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#设置工具链环境变量"},{"categories":["奇技淫巧"],"content":" 克隆内核源码 git clone -b blu_spark-10 https://github.com/engstk/op5.git ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:4:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#克隆内核源码"},{"categories":["奇技淫巧"],"content":" 编译 export args=\"-j16 \\ O=out\" make ${args} blu_spark_defconfig make ${args} 注意 blu_spark_defconfig在源码目录arch/arm64/configs/下，根据自己的源码来。 ","date":"2021-08-10","objectID":"/oneplus5-kernel-build/:5:0","series":null,"tags":["内核","一加5","编译"],"title":"一加五内核编译","uri":"/oneplus5-kernel-build/#编译"},{"categories":["奇技淫巧"],"content":"人能常清静，天地悉皆归。","date":"2021-08-10","objectID":"/linux-proxy/","series":null,"tags":["linux","代理"],"title":"Linux设置代理","uri":"/linux-proxy/"},{"categories":["奇技淫巧"],"content":" linux终端设置代理 export http_proxy=http://192.168.123.3:7890 export https_proxy=http://192.168.123.3:7890 取消 export http_proxy= export https_proxy= ","date":"2021-08-10","objectID":"/linux-proxy/:1:0","series":null,"tags":["linux","代理"],"title":"Linux设置代理","uri":"/linux-proxy/#linux终端设置代理"},{"categories":["奇技淫巧"],"content":" git设置代理 git config --global http.proxy http://192.168.123.3:7890 git config --global https.proxy http://192.168.123.3:7890 取消 git config --global --unset http.proxy git config --global --unset https.proxy ","date":"2021-08-10","objectID":"/linux-proxy/:2:0","series":null,"tags":["linux","代理"],"title":"Linux设置代理","uri":"/linux-proxy/#git设置代理"}]